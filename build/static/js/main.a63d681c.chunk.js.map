{"version":3,"sources":["components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","contact","display","justifyContent","marginBottom","button","marginLeft","ContactListItem","id","name","number","onDelete","classes","className","type","onClick","ContactList","contacts","map","form","flexDirection","label","labelName","marginRight","initialValue","ContactForm","onSubmit","onCheckNames","useState","state","setState","handleChange","e","prevState","target","value","preventDefault","newContant","uuidv4","onChange","pattern","title","required","filter","Filter","onFilterChange","App","setContacts","setFilter","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","newContact","newName","isNameExist","find","alert","normalisedFilter","toLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a63d681c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  contact: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 5,\n  },\n  button: {\n    marginLeft: 10,\n  },\n});\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  const classes = useStyles();\n  const handleDelete = () => onDelete(id);\n\n  return (\n    <li className={classes.contact}>\n      <p>\n        {name} : {number}\n      </p>\n      <button className={classes.button} type=\"button\" onClick={handleDelete}>\n        X\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  oonDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  label: {\n    marginBottom: 10,\n  },\n  labelName: {\n    marginRight: 8,\n  },\n});\n\nconst initialValue = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ onSubmit, onCheckNames }) => {\n  const [state, setState] = useState(initialValue);\n  const { name, number } = state;\n  const classes = useStyles();\n\n  const handleChange = e => {\n    setState(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContant = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (onCheckNames(newContant.name)) {\n      return;\n    }\n\n    onSubmit(newContant);\n    setState(initialValue);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit}>\n      <label className={classes.label}>\n        <span className={classes.labelName}>Name</span>\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={classes.label}>\n        <span className={classes.labelName}>Phone</span>\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onCheckNames: PropTypes.func,\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\n\nconst useStyles = createUseStyles({\n  filter: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  label: {\n    marginBottom: 10,\n  },\n});\n\nconst Filter = ({ onFilterChange }) => {\n  const [state, setState] = useState('');\n  const classes = useStyles();\n\n  const handleFilterChange = e => {\n    const value = e.target.value;\n    setState(value);\n    onFilterChange(value);\n  };\n\n  return (\n    <>\n      <label className={classes.filter}>\n        <span className={classes.label}>Find contacts by name</span>\n        <input value={state} onChange={handleFilterChange} type=\"text\" />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\n\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('contacts'));\n    if (data) {\n      setContacts(data);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmit = newContact => {\n    setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleFilter = value => {\n    setFilter(value);\n  };\n\n  const handleDelete = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  const visibleContacts = () => {\n    const normalisedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalisedFilter),\n    );\n    return visibleContacts;\n  };\n\n  const checkPossibleRepeat = newName => {\n    const isNameExist = !!contacts.find(contact => contact.name === newName);\n\n    if (isNameExist) {\n      alert(`${newName} is already in contacts.`);\n    }\n    return isNameExist;\n  };\n\n  return (\n    <section>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} onCheckNames={checkPossibleRepeat} />\n\n      <h2>Contacts</h2>\n      <Filter onFilterChange={handleFilter} />\n      <ContactList contacts={visibleContacts()} onDelete={handleDelete} />\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}